#!/usr/bin/env python3

# Ввести последовательность четвёрок целых чисел вида (s, d, m, n), (…), ….
# Для каждой четвёрки составить целочисленную последовательность {ai}:
# a0=s, ai+1=ai/d+m, если ai делится на d и ai+1=ai+n в противном случае.
# Последовательность заканчивается на i-м элементе, если i+1-й будет ему равен,
# в противном случае (цикл из нескольких значений или неограниченный рост) последовательность считается бесконечной.
# Если последовательность, полученная из очередной четвёрки, заканчивается,
# начинается последовательность, полученная из следующей четвёрки.
# Ввести k и вывести k-й член этой общей последовательности или "NO", если в ней меньше k элементов.
# См. далее разбор решения.
#
# (4,2,5,3),(3,5,8,1),(5,3,8,2),(3,4,2,6)
# 30
#
#     Первая четвёрка породит конечную последовательность '4 7 10 (10)'
#     Вторая четвёрка породит конечную последовательность '3 4 5 9 10 (10)'
#     Третья четвёрка породит бесконечную последовательность '5 7 9 11 13 15 (13 15)'
#
#     Что породит четвёртая четвёрка, мы не узнаем :)
#
# Итого, 3 элемента в первой, 5 — во второй и остальные 22 — в третьей последовательности.
# На чётном месте стоит 13, это и есть ответ
#
# 13

# I took decision from http://uneex.ru/LecturesCMC/PythonIntro2017/Homework_YieldFrom

def divadd(s, d, m, n):
    prev, curr = None, s
    while prev!=curr:
        yield curr
        prev, curr = curr, (curr+n) if curr%d else (curr//d+m)

def catseq(fours):
    for four in fours:
        yield from divadd(*four)

if __name__ == "__main__":
    fours = eval(input())
    k = eval(input())
    for i,e in enumerate(catseq(fours)):
        if i == k:
            print(e)
            break
    else:
        print("NO")
